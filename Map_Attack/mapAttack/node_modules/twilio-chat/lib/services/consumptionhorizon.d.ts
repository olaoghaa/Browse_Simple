import { Session } from '../session';
export interface ConsumptionHorizonServices {
    session: Session;
}
/**
 * @classdesc Provides consumption horizon management functionality
 */
declare class ConsumptionHorizon {
    private readonly services;
    private readonly consumptionHorizonRequests;
    private consumptionHorizonUpdateTimer;
    constructor(services: ConsumptionHorizonServices);
    private getReportInterval();
    private delayedSendConsumptionHorizon(delay);
    private sendConsumptionReport(keepTimer);
    private processConsumptionReportResponse(response, promises);
    private processConsumptionReportError(err, promises);
    /**
     * Updates consumption horizon value without any checks
     */
    updateLastConsumedMessageIndexForChannel(channelSid: string, messageIdx: number): Promise<number>;
    /**
     * Move consumption horizon forward
     */
    advanceLastConsumedMessageIndexForChannel(channelSid: string, messageIdx: number, currentChannelLastConsumedIndex: number): Promise<number>;
    private addPendingConsumptionHorizonRequest(channelSid, entry, promise);
}
export { ConsumptionHorizon };
