import { Transport } from 'twilio-transport';
import * as NotificationClient from 'twilio-notifications';
import { Configuration } from '../configuration';
export interface TypingIndicatorServices {
    transport: Transport;
    notificationClient: NotificationClient;
}
/**
 * @class TypingIndicator
 *
 * @constructor
 * @private
 */
declare class TypingIndicator {
    private readonly services;
    private readonly config;
    private sentUpdates;
    private getChannel;
    private serviceTypingTimeout;
    constructor(config: Configuration, services: TypingIndicatorServices, getChannel: any);
    readonly typingTimeout: number;
    /**
     * Initialize TypingIndicator controller
     * Registers for needed message types and sets listeners
     * @private
     */
    initialize(): void;
    /**
     * Remote members typing events handler
     * @private
     */
    handleRemoteTyping(message: any): void;
    /**
     * Send typing event for the given channel sid
     * @param {String} channelSid
     */
    send(channelSid: string): any;
    private _send(channelSid);
}
export { TypingIndicator };
